#davon könnte man dann z.B. die wahren beobachtungen abziehen um zu sehen, wie sehr
#die sich unterscheiden.
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta0 ~ dnorm(0,0.000001)
beta1 ~ dnorm(0,0.000001)
beta2 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
# Distribution of future b0_i
#b0.rep[i] ~ dnorm(0,0.0001)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta0=1, beta1 = 1,beta2 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta2", "beta0", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.inits <- function(){list(sigma=2, beta0=1, beta1 = 1,beta2 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta2", "beta0", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
#mu[i] <- beta0 + beta1 *x1[i] + beta2 *x2[i]+ b0[id[i]]
mu[i] <-  beta1 *x1[i] + b0[id[i]]
#log(mu[i]) <- beta1 *x1[i] + beta2 *x2[i] + b0[id[i]]
#In the regions the estimation of prediciton. If it workds or not
#davon könnte man dann z.B. die wahren beobachtungen abziehen um zu sehen, wie sehr
#die sich unterscheiden.
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta0 ~ dnorm(0,0.000001)
beta1 ~ dnorm(0,0.000001)
beta2 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
# Distribution of future b0_i
#b0.rep[i] ~ dnorm(0,0.0001)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta0=1, beta1 = 1,beta2 = 1 )}
parameters = c("sigma", "beta2", "beta0", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
#mu[i] <- beta0 + beta1 *x1[i] + beta2 *x2[i]+ b0[id[i]]
mu[i] <-  beta1 *x1[i] + b0[id[i]]
#log(mu[i]) <- beta1 *x1[i] + beta2 *x2[i] + b0[id[i]]
#In the regions the estimation of prediciton. If it workds or not
#davon könnte man dann z.B. die wahren beobachtungen abziehen um zu sehen, wie sehr
#die sich unterscheiden.
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta0 ~ dnorm(0,0.000001)
beta1 ~ dnorm(0,0.000001)
beta2 ~ dnorm(0,0.000001)
for ( i in 1:10){
b0[i] ~ dnorm(0,0.0001)
# Distribution of future b0_i
#b0.rep[i] ~ dnorm(0,0.0001)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta0=1, beta1 = 1,beta2 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta2", "beta0", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
#mu[i] <- beta0 + beta1 *x1[i] + beta2 *x2[i]+ b0[id[i]]
mu[i] <-  beta1 *x1[i] + b0[id[i]]
#log(mu[i]) <- beta1 *x1[i] + beta2 *x2[i] + b0[id[i]]
#In the regions the estimation of prediciton. If it workds or not
#davon könnte man dann z.B. die wahren beobachtungen abziehen um zu sehen, wie sehr
#die sich unterscheiden.
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta0 ~ dnorm(0,0.000001)
beta1 ~ dnorm(0,0.000001)
beta2 ~ dnorm(0,0.000001)
for ( i in 1:10){
b0[i] ~ dnorm(0,0.0001)
# Distribution of future b0_i
#b0.rep[i] ~ dnorm(0,0.0001)
}
}
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
#mu[i] <- beta0 + beta1 *x1[i] + beta2 *x2[i]+ b0[id[i]]
mu[i] <-  beta1 *x1[i] + b0[id[i]]
#log(mu[i]) <- beta1 *x1[i] + beta2 *x2[i] + b0[id[i]]
#In the regions the estimation of prediciton. If it workds or not
#davon könnte man dann z.B. die wahren beobachtungen abziehen um zu sehen, wie sehr
#die sich unterscheiden.
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta0 ~ dnorm(0,0.000001)
beta1 ~ dnorm(0,0.000001)
beta2 ~ dnorm(0,0.000001)
for ( i in 1:5){
b0[i] ~ dnorm(0,0.0001)
# Distribution of future b0_i
#b0.rep[i] ~ dnorm(0,0.0001)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta0=1, beta1 = 1,beta2 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta2", "beta0", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
Grub <- read.csv("..\\data\\Grubs_Easy_normalized_size.csv")
# Grub1 <- Grub
# Grub <- Grub1[Grub1$group == 1,]
model.data <- list( y = Grub$value, N = length(Grub$value), x1 = Grub$grubsize,
x2 = Grub$group, id = Grub$id, Nsubj = length(unique(Grub$id)))
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
#mu[i] <- beta0 + beta1 *x1[i] + beta2 *x2[i]+ b0[id[i]]
mu[i] <-  beta1 *x1[i] + b0[id[i]]
#log(mu[i]) <- beta1 *x1[i] + beta2 *x2[i] + b0[id[i]]
#In the regions the estimation of prediciton. If it workds or not
#davon könnte man dann z.B. die wahren beobachtungen abziehen um zu sehen, wie sehr
#die sich unterscheiden.
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta0 ~ dnorm(0,0.000001)
beta1 ~ dnorm(0,0.000001)
beta2 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
# Distribution of future b0_i
b0.rep[i] ~ dnorm(0,0.0001)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta0=1, beta1 = 1,beta2 = 1, b0 = c(rep(1,times = 20)) )}
parameters = c("sigma", "beta2", "beta0", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
# Grub1 <- Grub
Grub <- Grub[Grub$group == 1,]
#Bayes1_lognormal_random.r
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(coda)
library(R2OpenBUGS)
Grub <- read.csv("..\\data\\Grubs_Easy_normalized_size.csv")
# Grub1 <- Grub
Grub <- Grub[Grub$group == 1,]
model.data <- list( y = Grub$value, N = length(Grub$value), x1 = Grub$grubsize,
id = Grub$id, Nsubj = length(unique(Grub$id)))
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
mu[i] <-  beta1 *x1[i] + b0[id[i]]
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta1 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
# Distribution of future b0_i
b0.rep[i] ~ dnorm(0,0.0001)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta0=1, beta1 = 1,beta2 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
#Bayes1_lognormal_random.r
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(coda)
library(R2OpenBUGS)
Grub <- read.csv("..\\data\\Grubs_Easy_normalized_size.csv")
# Grub1 <- Grub
Grub <- Grub[Grub$group == 1,]
model.data <- list( y = Grub$value, N = length(Grub$value), x1 = Grub$grubsize,
id = (Grub$id)-10, Nsubj = length(unique(Grub$id)))
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
mu[i] <-  beta1 *x1[i] + b0[id[i]]
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta1 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
# Distribution of future b0_i
b0.rep[i] ~ dnorm(0,0.0001)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta0=1, beta1 = 1,beta2 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
mu[i] <-  beta1 *x1[i] + b0[id[i]]
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta1 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
# Distribution of future b0_i
b0.rep[i] ~ dnorm(0,0.0001)
}
sds <- sd(b0[])
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta1 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
mu[i] <-  beta1 *x1[i] + b0[id[i]]
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta1 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
}
sds <- sd(b0[])
for ( i in 1:Nsubj){
# Distribution of future b0_i
b0.rep[i] ~ dnorm(0,sds)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta1 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
mu[i] <-  beta1 *x1[i] + b0[id[i]]
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta1 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
}
sds <- sd(b0[])
for ( i in 1:Nsubj){
# Distribution of future b0_i
b0.rep[i] ~ dnorm(0,1/sds)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta1 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
mu[i] <-  beta1 *x1[i] + b0[id[i]]
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta1 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
}
sds <- pow(sd(b0[]),-1)
for ( i in 1:Nsubj){
# Distribution of future b0_i
b0.rep[i] ~ dnorm(0,sds)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta1 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
mu[i] <-  beta1 *x1[i] + b0[id[i]]
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta1 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
}
sds <- pow(sd(b0[]),-1)
for ( i in 1:Nsubj){
# Distribution of future b0_i
b0.rep[i] ~ dnorm(mu[i],sds)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta1 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
mu[i] <-  beta1 *x1[i] + b0[id[i]]
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta1 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
}
sds <- pow(sd(b0[]),-1)
for ( i in 1:Nsubj){
# Distribution of future b0_i
b0.rep[i] ~ dnorm(mu[(7*i)-6],sds)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta1 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
mu[i] <-  beta1 *x1[i] + b0[id[i]]
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta1 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
}
sds <- pow(sd(b0[]),-1)
for ( i in 1:Nsubj){
# Distribution of future b0_i
mu_gr[i] <- mean(mu[])
b0.rep[i] ~ dnorm(mu_gr[j],sds)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta1 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
mu[i] <-  beta1 *x1[i] + b0[id[i]]
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta1 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
}
sds <- pow(sd(b0[]),-1)
for ( i in 1:Nsubj){
# Distribution of future b0_i
mu_gr[i] <- mean(mu[])
b0.rep[i] ~ dnorm(mu_gr[i],sds)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta1 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
model.function <- function(){
for (i in 1:N){
y[i] ~ dlnorm(mu[i], sigma)
mu[i] <-  beta1 *x1[i] + b0[id[i]]
predict[i]  ~ dlnorm(mu[i], sigma)
}
# forecast <- y[] - predict[]
#priors
sigma ~ dunif(0.1,100)
beta1 ~ dnorm(0,0.000001)
for ( i in 1:Nsubj){
b0[i] ~ dnorm(0,0.0001)
}
sds <- pow(sd(b0[]),-1)
for ( i in 1:Nsubj){
# Distribution of future b0_i
mu_gr[i] <- mean(mu[i:(i+6)])
b0.rep[i] ~ dnorm(mu_gr[i],sds)
}
}
write.model(model.function, "Scripts\\Bayes1_lognormal_Random.txt")
model.inits <- function(){list(sigma=2, beta1 = 1, b0 = c(rep(1,times = 10)) )}
parameters = c("sigma", "beta1", "b0","predict","b0.rep")
model.out <- bugs(model.data, model.inits,
model.file = "Bayes1_lognormal_Random.txt",
parameters=parameters,
n.chains = 2,n.thin = 10, n.iter = 5000,  n.burnin = 1000, debug = T,
codaPkg=T,
working.directory = ".\\Scripts")
